---
Key Points:
---

1. Synchronized is the keyword applicable for methods and blocks but not for
classes and variables.

2. If a method or block declared as the synchronized then at a time only one
Thread is allow to execute that method or block on the given object.

3. The main advantage of synchronized keyword is we can resolve data
inconsistency problems.

4. But the main disadvantage of synchronized keyword is it increases waiting time
of the Thread and effects performance of the system.

5. Hence if there is no specific requirement then never recommended to use synchronized keyword.

6.Every object in java has a unique lock.

7. If a Thread wants to execute any synchronized method on the given object 1st it
has to get the lock of that object.Once a Thread got the lock of that object then
it's allow to execute any synchronized method on that object.If the synchronized
method execution completes then automatically Thread releases lock.

8. While a Thread executing any synchronized method the remaining Threads are
not allowed execute any synchronized method on that object simultaneously.
But  remaining Threads are allowed to execute any non-synchronized method
simultaneously. [lock concept is implemented based on object but not based on  method].

---
Class level lock:
---
1. Every class in java has a unique lock. If a Thread wants to execute a static
 synchronized method then it required class level lock.
2. Once a Thread got class level lock then it is allow to execute any static
 synchronized method of that class.

---
 Synchronized block:
---
1. If very few lines of the code required synchronization then it's never
recommended to declare entire method as synchronized we have to enclose those
few lines of the code with in synchronized block.
2. The main advantage of synchronized block over synchronized method is it
reduces waiting time of Thread and improves performance of the system.
example:
synchronized(x){}
